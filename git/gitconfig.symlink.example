[alias]
        # `git remote prune origin`: remove remote-tracking branches that were deleted from the remote repo
        # `git gc`: cleanup unnecessary files and optimize the local repository
        # `git clean -df`: remove untracked files and directories from the working tree
        # `git stash clear`: remove all stashed states
        trim = !git remote prune origin && git gc
        cleanup = !git clean -df && git stash clear

        # Add untracked, remove deleted, and show status
        adda = !git add -A && git status

        # Diff what is staged for the next commit
        diffc = diff --cached
        # Diff overview
        diffst = diff --stat

        # Custom graph log (append any tree-ish)
        lg = log --pretty=nice --date-order --graph
        # Custom graph log for all branches
        lga = log --pretty=nice --date-order --graph --all

        # Extended custom graph log
        # lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)[%an]%Creset' --abbrev-commit --date-order
        # Extended custom graph log for all branches
        # lga = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)[%an]%Creset' --abbrev-commit --date-order --all

        # Diffstat log
        logst = log --stat
        # Short format diffstat log
        logsf = log --stat --format=oneline --abbrev-commit

        # Unstage all files in index
        unstage = reset HEAD --

        co = checkout
        promote = !$DOTFILES/bin/git-promote
        wtf     = !$DOTFILES/bin/git-wtf
        rank-contributors = !$DOTFILES/bin/git-rank-contributors
        count   = !git shortlog -sn

        # List recent branches
        recent = "!r(){git for-each-ref --sort=-committerdate refs/heads --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)'|column -ts'|'}; r"

        # Temporarily ignore/unignore files, and list ignored files
        ignore = !git update-index --assume-unchanged
        unignore = !git update-index --no-assume-unchanged
        ignored = !git ls-files -v | grep ^[a-z]
[hub]
        protocol = https
[credential]
        helper = osxkeychain
[color]
        diff = auto
        status = auto
        branch = auto
        ui = true
        interactive = auto
[core]
        excludesfile = ~/.gitignore
	editor = micro
        pager = diff-so-fancy | less -FXRi
[apply]
        whitespace = nowarn
[merge]
	tool = vscode
[mergetool "vscode"]
	cmd = code --wait $MERGED
[diff]
	tool = vscode
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[pretty]
        # tut: http://gitimmersion.com/lab_10.html
        # ref: http://linux.die.net/man/1/git-log
        # Result: <short-sha> <commit-message> (<pointer-names>) -- <commit-author-name>; <relative-time>
        nice = "%C(yellow)%h%C(reset) %C(white)%s%C(cyan)%d%C(reset) -- %an; %ar"
[help]
        autocorrect = 1
[push]
        # See `git help config` (search for push.default)
        # for more information on different options of the below setting.
        default = current
[commit]
	gpgsign = false
[gpg]
	program = gpg
[rerere]
	enabled = true
[fetch]
	recurseSubmodules = true
[init]
	templatedir = ~/.git-templates
