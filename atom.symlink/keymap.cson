# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#

# # Fix for slow enter key caused by Emmett
# 'atom-pane atom-text-editor[data-grammar~="html"]:not([mini]):not(.autocomplete-active),
# atom-pane atom-text-editor[data-grammar~="xml"]:not([mini]):not(.autocomplete-active)':
#   'enter': 'editor:newline'
#
# # Stop emmet from hijacking tab from snippets and autocomplete
# # https://github.com/atom/autocomplete-plus/issues/86#issuecomment-82661027
# 'atom-text-editor.autocomplete-active:not([mini])':
#   'tab': 'autocomplete-plus:confirm'
#
# # Stop emmet from hijacking tab from snippet tab stops
# # https://github.com/atom/autocomplete-plus/issues/86#issuecomment-82661027
# 'atom-text-editor[data-grammar="text html basic"]:not([mini]),
# atom-text-editor[data-grammar~="jade"]:not([mini]),
# atom-text-editor[data-grammar~="css"]:not([mini]),
# atom-text-editor[data-grammar~="scss"]:not([mini])':
#   'tab': 'snippets:next-tab-stop'
